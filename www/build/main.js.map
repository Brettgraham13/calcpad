{"version":3,"sources":["../../node_modules/@angular/core/esm5 lazy","../../src lazy","../../src/pages/tabs/tabs.ts","../../src/pages/about/about.ts","../../src/pages/contact/contact.ts","../../src/pages/calc/calc.ts","../../src/pages/my-script-canvas/my-script-canvas.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/app/app.component.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 109;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/esm5 lazy\n// module id = 109\n// module chunks = 0","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 150;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 150\n// module chunks = 0","import { Component } from '@angular/core';\n\nimport { AboutPage } from '../about/about';\nimport { ContactPage } from '../contact/contact';\nimport { CalcPage } from '../calc/calc';\nimport { CanvasPage } from '../canvas/canvas';\nimport { MyScriptCanvasPage } from '../my-script-canvas/my-script-canvas';\n\n@Component({\n  templateUrl: 'tabs.html'\n})\nexport class TabsPage {\n\n  tab1Root = CalcPage;\n  tab2Root = AboutPage;\n  tab3Root = ContactPage;\n  // tab4Root = CanvasPage;\n  tab5Root = MyScriptCanvasPage;\n\n  constructor() {\n\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/tabs/tabs.ts","import { Component } from '@angular/core';\nimport { NavController } from 'ionic-angular';\n\n@Component({\n  selector: 'page-about',\n  templateUrl: 'about.html'\n})\nexport class AboutPage {\n\n  constructor(public navCtrl: NavController) {\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/about/about.ts","import { Component } from '@angular/core';\nimport { NavController } from 'ionic-angular';\n\n@Component({\n  selector: 'page-contact',\n  templateUrl: 'contact.html'\n})\nexport class ContactPage {\n\n  constructor(public navCtrl: NavController) {\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/contact/contact.ts","import { Component } from '@angular/core';\nimport { NavController } from 'ionic-angular';\nimport { AlertController } from 'ionic-angular';\n\n@Component({\n  selector: 'page-calc',\n  templateUrl: 'calc.html'\n})\n\nexport class CalcPage {\n\n  constructor(public navCtrl: NavController, public alertCtrl: AlertController) {\n\n  }\n\n  // NOTES: divide by zero is handled differently from all other errors. Maybe should be fixed up, but it might be difficult\n  // Make decisions about how large of numbers we want to allow\n  // I made it so that e is treated like an operation for error handling\n  // Minus signs at the beginning of a string, right after another symbol indicate a negative number. \n  // Remember to highlight decision to allow the user to edit the result string and delete characters. More error handling to deal with, but makes sure the user doesn't\n  //    feel like the calculator is broken\n  // Add ionic object that lets you have a cursor on the text box. \n\n  screen = \"\";\n  error = \"Unknown Error\"\n  //Global flag to keep track of whether the string should be updated at the end\n  globalFlag = true;\n  __MAX_LENGTH__ = 19;\n  edit = \"\";\n\n  presentAlert() {\n    let alert = this.alertCtrl.create({\n      title: 'Invalid input',\n      subTitle: this.error,\n      buttons: ['Dismiss']\n    });\n    alert.present();\n  }\n\n  presentConfirm() {\n    let alert = this.alertCtrl.create({\n      title: 'Did you mean to input this?',\n      message: this.screen,\n      buttons: [\n        {\n          text: 'No',\n          role: 'cancel',\n          handler: () => {\n            this.screen = this.edit;\n          }\n        },\n        {\n          text: 'Yes',\n          handler: () => {\n          }\n        }\n      ]\n    });\n    alert.present();\n  }\n  \n  //Swipe the display to delete the last character from the string\n  swipe = function($e){\n    if(this.screen.length != 0){\n      if($e.offsetDirection == 2){\n        this.screen = this.screen.substring(0, this.screen.length-1);\n      }\n      else if($e.offsetDirection == 4){\n        // Swiped right\n        this.screen = this.screen.substring(1);\n      }\n    }\n  }\n\n\n  compute = function(){\n    //REMOVE THIS GET BETTER WAY TO TEST\n    this.testingCalls();\n\n    if(this.validString(this.screen)){\n      this.screen = this.stringToMath(this.screen).toString();\n    }\n  }\n\n  checkInput = function(input: any, char1 : string, char2: string){\n    if(this.screen.charAt(this.screen.length - 1) == char1 && input == char2){\n      return(true);\n    } else {\n      return(false);\n    }\n  }\n\n  // previousWasOperation = function(){\n  //   var operations = [\"*\", \"/\",\"+\",\"-\",\"^\"];\n\n  //   if(operations.indexOf(this.screen.charAt(this.screen.length - 1))>-1){\n  //     return(true);\n  //   } else {\n  //     return(false);\n  //   }\n  // }\n\n  // currentIsOperation  = function(input: any){\n  //   var operations = [\"*\", \"/\",\"+\",\"-\",\"^\"];\n\n  //   if(operations.indexOf(input)>-1){\n  //     return(true);\n  //   } else {\n  //     return(false);\n  //   }\n  // }\n\n  replaceInput = function(newChar: string){\n    this.screen = this.screen.substring(0,this.screen.length - 1) + newChar;\n  }\n\n  correctConsecutiveOperations = function(input: any){\n    var operationsMinusMinus = [\"*\",\"/\",\"+\",\"^\"]\n    \n    if(this.checkInput(input,\"*\",\"*\")){\n      this.replaceInput(\"^(\");\n    // } else if (this.checkInput(input,\"+\",\"+\")){\n    //   this.replaceInput(\"+\");\n    // } else if (this.checkInput(input,\"+\",\"-\")){\n    //   this.replaceInput(\"-\");\n    // } else if (this.checkInput(input,\"-\",\"+\")){\n    //   this.replaceInput(\"-\");\n    // } else if (this.checkInput(input,\"-\",\"-\")){\n    //   this.replaceInput(\"+\");\n    // } else if (this.checkInput(input,\"/\",\"+\")){\n    //   this.replaceInput(\"/\");\n    // } else if (this.checkInput(input,\"*\",\"+\")){\n    //   this.replaceInput(\"*\");\n    // } else if (this.checkInput(input,\"(\",\"+\")){\n    //   this.replaceInput(\"(\");\n    // } else if (this.checkInput(input,\"+\",\"*\")){\n    //   this.replaceInput(\"*\");\n    // } else if (this.checkInput(input,\"-\",\"*\")){\n    //   this.replaceInput(\"*\");\n    // } else if (this.checkInput(input,\"+\",\"/\")){\n    //   this.replaceInput(\"/\");\n    // } else if (this.checkInput(input,\"-\",\"/\")){\n    //   this.replaceInput(\"/\");\n    // } else if (this.checkInput(input,\"/\",\"/\")){\n    //   this.replaceInput(\"/\");\n    // } else if (this.checkInput(input,\"/\",\"*\")){\n    //   this.replaceInput(\"*\");\n    } else {\n      this.screen = this.screen += input;\n    }\n  }\n\n  copyToDisplay = function(input: any) {\n    if(!this.screenIsInfinity(this.screen)){\n      this.correctConsecutiveOperations(input);\n    }\n    else{\n      this.error = \"The value is Infinity. Please clear the screen before making any additional inputs.\";\n      this.presentAlert();\n    }\n  }\n\n  deleteCharacter = function(){\n    if(!this.screenIsInfinity(this.screen)){\n      this.screen = this.screen.substring(0,this.screen.length -1)\n      // this.correctConsecutiveOperations(input);\n    }\n    else{\n      this.error = \"The value is Infinity. Please clear the screen before making any additional inputs.\";\n      this.presentAlert();\n    }\n  }\n\n  // copyToDisplay = function(input: any) {\n  //   if(!this.screenIsInfinity(this.screen)){\n  //     if(this.screen.charAt(this.screen.length - 1) == \"*\" && input == \"*\"){\n  //         this.screen = this.screen.substring(0,this.screen.length - 1) + \"^(\";\n  //     } \n  //     else {\n  //       this.screen = this.screen += input;\n  //     }\n  //   }\n  //   else{\n  //     this.error = \"The value is Infinity. Please clear the screen before making any additional inputs.\";\n  //     this.presentAlert();\n  //   }\n  // }\n\n  clearDisplay = function() {\n    this.screen = \"\";\n  }\n\n  validString = function(str){\n    // cases to consider: \n\n    //Empty string\n    if(this.screen.length == 0){\n      return(false);\n    }\n\n    // two operations in a row\n    if(this.twoSeqOperations(str)){\n      //Throw an error message!\n      this.error = \"Your expression contains two sequential operations.\";\n      this.presentAlert();\n      return(false);\n    }\n\n    // Starts with an operation\n    if(this.startsWithOperation(str)){\n      //Throw an error message!\n      this.error = \"Your expression begins with an operation.\";\n      this.presentAlert();\n      return(false);\n    }\n\n    // ends with an operation\n    if(this.endsWithOperation(str)){\n      //Throw an error message!\n      this.error = \"Your expression ends with an operation.\";\n      this.presentAlert();\n      return(false);\n    }\n\n    // parentheses issues\n    if(this.tooManyClosePar(str)){\n      //Throw an error message!\n      this.error = \"Your expression has an issue with the having more closed parentheses than open.\";\n      this.presentAlert();\n      return(false);\n    }\n\n    // if(this.tooManyOpenPar(str)){\n    //   //Throw an error message!\n    //   this.error = \"Your expression has an issue with the having more open parentheses than close.\";\n    //   this.presentAlert();\n    //   return(false);\n    // }\n\n    // operation immediately after open or before close parentheses\n    if(this.badOperationInParentheses(str)){\n      //Throw an error message\n      this.error = \"Your expression has an operation immediately after an open parenthesis or before a close parenthesis.\";\n      this.presentAlert();\n      return(false);\n    }\n\n    //More than one period in a number\n    if(this.tooManyDecimals(str)){\n      //Throw an error message!\n      this.error = \"One of your numbers contains more than one periods. \";\n      this.presentAlert();\n      return(false);\n    }\n\n    //empty parentheses\n    if(this.emptyParentheses(str)){\n      //Throw an error message!\n      this.error = \"The input contains and empty set of parentheses. \";\n      this.presentAlert();\n      return(false);\n    }\n\n    //really big numbers and people editing the string around e\n    if(this.badEInput(str)){\n      this.error = \"Something went wrong around the character 'e'\";\n      this.presentAlert();\n      return(false);\n    }\n\n    //Two sequential negatives\n    if(this.twoSeqNegatives(str)){\n      this.error = \"Two or more consecutive '-'\";\n      this.presentAlert();\n      return(false);\n    }\n\n    if(this.operationsAfterMinus(str)){\n      this.error = \"Operation after minus sign.\";\n      this.presentAlert();\n      return(false);\n    }\n\n    if(this.anythingButParAfterCarrot(str)){\n      this.error = \"Something other than an open parenthesis after ^.\";\n      this.presentAlert();\n      return(false);\n    }\n\n    if(this.tooManyOpenPar(str)){\n      var numParen = this.numberPar(str);\n      var numExtra = numParen[0]-numParen[1];\n      var extraParen = \"\"\n      for(var i =0; i<numExtra; i++){\n        extraParen += \")\";\n      }\n      this.edit = this.screen;\n      this.screen += extraParen;\n\n      this.presentConfirm();\n    }\n\n    return(true);\n\n  }\n\n  anythingButParAfterCarrot = function(str){\n    for(var i = 0; i < str.length; i++){\n      if(str.charAt(i) == '^'){\n        if(str.charAt(i+1) != '('){\n          return(true);\n        }\n      }\n    }\n    return(false);\n  }\n\n  operationsAfterMinus = function(str){\n    var ops = ['*', '+', '/', '^']\n    for(var i = 0; i < str.length-1; i++){\n      if(str.charAt(i) == '-'){\n        if(ops.some(x=>x===str.charAt(i+1))){\n          return(true);\n        }\n      }\n    }\n    return(false);\n  }\n\n  twoSeqNegatives = function(str){\n    for(var i = 0; i < str.length-1; i++){\n      if(str.charAt(i) == '-' && str.charAt(i+1) == '-'){\n        return true;\n      }\n    }\n    return(false);\n  }\n\n  twoSeqOperations = function(str){\n    var indices = this.indicesOfOperations(str);\n    for(var i = 0; i < indices.length; i++){\n      if(indices[i] + 1 == indices[i+1]){\n        return(true);\n      }\n    }\n    return(false);\n  }\n\n  startsWithOperation = function(str){\n    var operations = [\"+\", \"*\", \"/\", 'e', '^'];\n    if(operations.indexOf(str.charAt(0)) != -1){\n      return(true);\n    }\n    return(false);\n  }\n\n  endsWithOperation = function(str){\n    var operations = [\"+\", \"-\", \"*\", \"/\", 'e', '^'];\n    if(operations.indexOf(str.charAt(str.length-1)) != -1){\n      return(true);\n    }\n    return(false);\n  }\n\n  tooManyDecimals = function(str){\n    var numDec = 0;\n    for(var i = 0; i < str.length; i++){\n        if(str.charAt(i) == \".\"){\n          numDec++;\n        }\n        if(numDec > 1){\n          return true;\n        }\n        if(str.charAt(i) == \"+\" || str.charAt(i) == \"-\" || str.charAt(i) == \"*\" || str.charAt(i) == \"/\"){\n          numDec = 0;\n        }\n    }\n    return(false);\n  }\n\n\n  numberPar = function(str){\n    var numOpen = 0;\n    var numClose = 0;\n    for(var i = 0; i < str.length; i++){\n      if(str.charAt(i) == \"(\"){\n        numOpen++;\n      }\n      if(str.charAt(i) == \")\"){\n        numClose++;\n      }\n    }\n    return([numOpen,numClose]);\n  }\n\n  tooManyOpenPar = function(str){\n    var numPar = this.numberPar(str);\n    var openPar = numPar[0];\n    var closePar = numPar[1];\n\n    if (openPar > closePar){\n      return(true);\n    }\n    return(false);\n  }\n\n  tooManyClosePar = function(str){\n    var numPar = this.numberPar(str);\n    var openPar = numPar[0];\n    var closePar = numPar[1];\n\n    if (closePar > openPar){\n      return(true);\n    }\n    return(false);\n  }\n\n\n  // tooManyClosePar = function(str){\n  //   var numOpen = 0;\n  //   var numClose = 0;\n  //   for(var i = 0; i < str.length; i++){\n  //       if(str.charAt(i) == \"(\"){\n  //         numOpen++;\n  //       }\n  //       if(str.charAt(i) == \")\"){\n  //         numClose++;\n  //       }\n  //       if(numClose > numOpen){\n  //         return(true);\n  //       }\n  //   }\n  //   if(numOpen > numClose){return(true)};\n  //   return(false);\n  // }\n\n  badOperationInParentheses = function(str){\n    for(var i = 0; i < str.length; i++){\n      if(str.charAt(i) == \"(\" && str.charAt(i+1) == \"*\"){\n        return(true);\n      }\n      if(str.charAt(i) == \")\" && str.charAt(i-1) == \"*\"){\n        return(true);\n      }\n    }\n    return(false);\n  }\n\n  emptyParentheses = function(str){\n    for(var i = 0; i < str.length-1; i++){\n      if(str.charAt(i) == '(' && str.charAt(i+1) == ')'){\n        return(true);\n      }\n    }\n    return(false);\n  }\n\n  badEInput = function(str){\n    var pm = ['+', '-'];\n    var digs = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '.']\n    for(var i = 0; i < str.length-1; i++){\n      //If the char is e...\n      if(str.charAt(i) == 'e'){\n        //And the next char isn't a plus or a minus and the previous character isn't a number\n        if(pm.some(x => x === str.charAt(i + 1)) &&  digs.some(x => x === str.charAt(i - 1)) && digs.some(x => x === str.charAt(i+2))){\n          if(str.charAt(i - 1) == '.'){\n            //have to make sure there's a number before the period\n            if(digs.some(x => x === str.charAt(i - 2))){\n              //It's all good\n            }\n            else{return(true);}\n          }\n        }\n        else{return(true);}\n      }\n    }\n    return(false);\n  }\n\n  screenIsInfinity = function(str){\n    if(this.screen == \"Infinity\"){\n      return true;\n    }\n    return(false);\n  }\n\n  //*** Note \n  //\n  //All this code should be put into a different file for readability\n  //\n  //***/\n  \n  indicesOfOperations(str){\n    var i = 0;\n    var operations: string[] = [\"/\", \"+\", \"-\", \"*\", '^'];\n    var indices = [];\n    for(i ; i < str.length; i++){\n      if(str.charAt(i) == \"e\"){\n        i++;\n      }\n      else{\n        if(operations.some(x => x === str.charAt(i))){\n          //Negatives have to be wrapped in parentheses, so don't add them if they're preceded by an operation.\n          if(str.charAt(i) == '-' && indices[indices.length - 1] == i - 1){\n            //Do nothing\n          }\n          else{\n            indices.push(i);\n          }\n        }\n      }\n    }\n    return(indices);\n  }\n\n  simpleArithmetic(num1, num2, operation){\n    if(operation == \"+\"){\n      return  num1 + num2;\n    }\n\n    if(operation == \"-\"){\n      return num1 - num2;\n    }\n\n    if(operation == \"*\"){\n      return num1 * num2;\n    }\n\n    if(operation == \"/\"){\n      if(num2 == 0){\n        this.error = \"Divide by zero.\";\n        this.presentAlert();\n        this.globalFlag = false;\n      }\n      return num1 / num2;\n    }\n  }\n\n  doMultandDiv(nums, indices, str){\n    //Treat everything like a stack\n    var newNums = new Array();\n    //Initialize for proper behavior\n    var lastOp = \"+\";\n    //Copy the indices array\n    var copyIndices = Object.assign([], indices);\n\n    while(copyIndices.length !== 0){\n\n      var currOp = str.charAt(copyIndices.pop());\n\n      if(currOp == \"+\" || currOp == \"-\"){\n        if(lastOp == \"+\" || lastOp == \"-\"){\n          newNums.push(nums.pop());\n        }\n\n      } else{\n        if(lastOp == \"*\" || lastOp == \"/\"){\n          var num1 = newNums.pop();\n          var num2 = nums.pop();\n          //Order has to be flipped for num1 and num2 because they are reversed from the stack\n          newNums.push(this.simpleArithmetic(num2, num1, currOp));\n        }\n        else if(lastOp == \"+\" || lastOp == \"-\"){\n          var num1 = nums.pop();\n          var num2 = nums.pop();\n          newNums.push(this.simpleArithmetic(num2, num1, currOp));\n        }\n      }\n      lastOp = currOp;\n    }\n\n    newNums.push(nums.pop())\n\n    return(newNums.reverse());\n  }\n\n  getParClose(str){\n    //Get the index of the first set of outermost closing parentheses\n    var parInd = str.indexOf(\"(\");\n    var numOpen = 0;\n    var numClose = 0;\n    var i = parInd;\n    while(numClose < numOpen || i == parInd){\n      if(str.charAt(i) == \"(\"){\n        numOpen = numOpen + 1;\n      }\n      if(str.charAt(i) == \")\"){\n        numClose = numClose + 1;\n      }\n      i++;\n    }\n    return(i-1);\n  }\n\n  grabNumbers = function(str, indices){\n    var nums: Number[] = new Array();\n    var numOp = indices.length;\n    var i = 0;\n\n    //Put in the first number\n    nums.push(Number(str.substring(0,indices[0])));\n\n    //Put all the numbers from the string into an array\n    if(numOp > 1){\n      for(i; i < indices.length - 1; i++){\n        nums.push(Number(str.substring(indices[i] + 1, indices[i+1])));\n      }\n    }\n    //Put in the last number\n    nums.push(Number(str.substring(indices[numOp - 1] + 1)));\n\n    return nums;\n  }\n\n  impliedMultiplications = function(str){\n    var i = 1;\n    var numChar = str.length;\n\n    while(i < numChar - 1){\n      if(str.charAt(i) == \"(\" && (str.charAt(i-1) != \"*\" && str.charAt(i-1) != \"/\" && str.charAt(i-1) != \"+\" && str.charAt(i-1) != \"-\" && str.charAt(i-1) != \"(\") && str.charAt(i-1) != '^'){\n        // update string with a \"*\" at index i\n        str = str.substring(0, i) + \"*\" + str.substring(i);\n        i++;\n      }\n      if(str.charAt(i) == \")\" && (str.charAt(i+1) != \"*\" && str.charAt(i+1) != \"/\" && str.charAt(i+1) != \"+\" && str.charAt(i+1) != \"-\" && str.charAt(i+1) != \")\"&& str.charAt(i-1) != '^')){\n        // update string with a \"*\" at index i+1\n        str = str.substring(0, i+1) + \"*\" + str.substring(i+1);\n        i++;\n    }\n\n      i++;\n      numChar = str.length;\n    }\n    \n    return str;\n  }\n\n\n  stringToMath = function(str){\n    //get the number of operations in the string\n    var indices = this.indicesOfOperations(str);\n\n    // console.log(str)\n    //Insert implied multiplications (parentheses next to numbers without an operator)\n    str = this.impliedMultiplications(str);\n    // console.log(str)\n\n    //Handle parentheses\n    if(str.indexOf(\"(\") != -1){\n      var parInd = str.indexOf(\"(\") + 1;\n      var parEnd = this.getParClose(str);\n      //console.log(str);\n      var parVal = this.stringToMath(str.substring(parInd, parEnd));\n      //Reupdate in case the string is very different from before\n      parEnd = this.getParClose(str);\n      var newStr = str.substring(0, parInd - 1) + String(parVal) + str.substring(parEnd+1);\n      //console.log(newStr);\n      return this.stringToMath(newStr);\n    }\n\n    //If there are no operations to be done, just return the string as a number\n    if(indices.length == 0){\n      return(Number(str));\n    }\n\n    var nums = this.grabNumbers(str, indices);\n\n    //Very careful string handling for exponents\n    while(str.indexOf('^') != -1){\n      var carInd = str.indexOf(\"^\");\n      //indices updated from scratch for multiple carrots in one string, could maybe do this more efficiently but idk seems hard.\n      //Could also add a flag so this isn't done the first time through... Also the way the logic works only carrot indices really need to be updated I think\n      indices = this.indicesOfOperations(str);\n      var car_ind_num = indices.indexOf(carInd);\n      var expVal = Math.pow(nums[car_ind_num], nums[car_ind_num + 1]);\n      indices.pop(car_ind_num);\n\n      var len_num1 = nums[car_ind_num].toString().length;\n      var len_num2 = nums[car_ind_num + 1].toString().length;\n\n      //Fix the string with the computed exponent\n      if(car_ind_num == 0){\n        str = expVal.toString() + str.substring(len_num1+len_num2 + 1, str.length)\n      }\n      else{\n        str = str.substring(0, carInd - len_num1) + expVal.toString() + str.substring(carInd + len_num2 + 1, str.length)\n      }\n      //Fix the list of numbers with the new computation\n      //Removes the two necessary numbers and inserts the correct value\n      nums.splice(car_ind_num, 2, expVal);  \n  \n    }\n\n    //Speed up but doesn't seem very important\n    //If the only operations are multiplication and division and we didn't divide by zero just return the val\n    // var flag = true;\n    // for(var i = 0; i < indices.length; i++){\n    //   if(str.charAt(indices[i]) == \"+\" || str.charAt(indices[i]) == \"-\"){\n    //     flag = false;\n    //   }\n    // } \n    // if(flag && this.globalFlag){\n    //   var answ = this.doMultandDiv(nums, indices, str)[1];\n    //   return (answ);\n    // }\n\n\n    //Do all the multiplications and divisions\n    //For some reason this function return an array with the first element being empty if the first operation is \"*\" or \"/\"\n    nums = this.doMultandDiv(nums, indices, str);\n    if(str.charAt(indices[0]) == \"*\" || str.charAt(indices[0]) == \"/\"){\n      nums = nums.slice(1);\n    }\n\n    //Remove all the multiplcation and division indices as they were computed above\n    var newIndices = new Array();\n    for(var i = 0; i < indices.length; i++) {\n        var currOp = str.charAt(indices[i]);\n        if(currOp == \"+\" || currOp == \"-\"){\n          newIndices.push(indices[i]);\n        }\n    }\n    indices = newIndices;\n    var ans = nums[0];\n    \n    //Do all the additions and subtractions\n    for(var i = 0; i < indices.length; i++){\n        ans = this.simpleArithmetic(ans, nums[i+1], str.charAt(indices[i]));\n    }\n\n    if(!this.globalFlag){\n      this.globalFlag = true;\n      return this.screen;\n    }\n\n    return(ans)\n    \n  }\n\n  // Unit tests!\n  testingCalls = function(){\n    //Test basic addition\n    var testStr = \"6+3\";\n    var ans = 9;\n    this.testStringToMath(testStr, ans)\n    \n    // Test basic subtraction\n    testStr = \"9-3\";\n    ans = 6;\n    this.testStringToMath(testStr, ans)\n\n    //Test basic multiplication\n    testStr = \"6*3\";\n    ans = 18;\n    this.testStringToMath(testStr, ans)\n\n    //Test basic multiplication\n    testStr = \"6/3\";\n    ans = 2;\n    this.testStringToMath(testStr, ans)\n\n    //Test linked addition\n    testStr = \"6+3+3\";\n    ans = 12;\n    this.testStringToMath(testStr, ans)\n\n    //Test linked multiplication\n    testStr = \"6*3*4\";\n    ans = 72;\n    this.testStringToMath(testStr, ans)\n\n    //Test both addition and multiplication\n    testStr = \"6+3*3\";\n    ans = 15;\n    this.testStringToMath(testStr, ans)\n\n    //Test all four in one\n    testStr = \"6+3*5-6/3\";\n    ans = 19;\n    this.testStringToMath(testStr, ans)\n\n    //Test negative numbers with addition\n    testStr = \"6+-3\";\n    ans = 3;\n    this.testStringToMath(testStr, ans)\n\n    //Test negative numbers with addition\n    testStr = \"-6+3\";\n    ans = -3;\n    this.testStringToMath(testStr, ans)\n\n    //Test negative numbers with addition\n    testStr = \"-6*3\";\n    ans = -18;\n    this.testStringToMath(testStr, ans)\n\n    //Test negative numbers with addition\n    testStr = \"6*-3\";\n    ans = -18;\n    this.testStringToMath(testStr, ans)\n\n    //Test negative numbers with division\n    testStr = \"6/-3\";\n    ans = -2;\n    this.testStringToMath(testStr, ans)\n\n    //Test negative numbers with division\n    testStr = \"-6/3\";\n    ans = -2;\n    this.testStringToMath(testStr, ans)\n\n    //Test negative numbers with multiplication\n    testStr = \"-6/-3\";\n    ans = 2;\n    this.testStringToMath(testStr, ans)\n\n    // Test parentheses\n    testStr = \"(6)\";\n    ans = 6;\n    this.testStringToMath(testStr, ans)\n\n    // Test parentheses\n    testStr = \"(-6)\";\n    ans = -6;\n    this.testStringToMath(testStr, ans)\n\n    // Test parentheses\n    testStr = \"(6+2)\";\n    ans = 8;\n    this.testStringToMath(testStr, ans)\n\n    // Test parentheses\n    testStr = \"(6)+2\";\n    ans = 8;\n    this.testStringToMath(testStr, ans)\n\n    // Test parentheses\n    testStr = \"(6)*2\";\n    ans = 12;\n    this.testStringToMath(testStr, ans)\n\n    // Test parentheses\n    testStr = \"(6)/2\";\n    ans = 3;\n    this.testStringToMath(testStr, ans)\n\n    // Test parentheses\n    testStr = \"4+(-6)+2\";\n    ans = 0;\n    this.testStringToMath(testStr, ans)\n\n    // Test parentheses\n    testStr = \"(6+3)*(6+4)\";\n    ans = 90;\n    this.testStringToMath(testStr, ans)\n\n    // Test parentheses\n    testStr = \"(6+3)/(9-3+3)\";\n    ans = 1;\n    this.testStringToMath(testStr, ans)\n\n    // Test parentheses\n    testStr = \"(3+(2+3*2)+3)\";\n    ans = 14;\n    this.testStringToMath(testStr, ans)\n\n    // Test parentheses\n    var testStr = \"6+(3+(2+3*2)+3)\";\n    var ans = 20;\n    this.testStringToMath(testStr, ans)\n\n    // Test parentheses\n    testStr = \"(6+(3+(2+3*2)+3))\";\n    ans = 20;\n    this.testStringToMath(testStr, ans)\n\n    // Test parentheses\n    testStr = \"(6+(3+(2+3*2)+3))/(1+1)\";\n    ans = 10;\n    this.testStringToMath(testStr, ans)\n\n    // Test parentheses\n    testStr = \"((6+(3+(2+3*2)+3))/(1+1))\";\n    ans = 10;\n    this.testStringToMath(testStr, ans)\n\n    // Test parentheses\n    testStr = \"2((6+(3+(2+3*2)+3))/(1+1))\";\n    ans = 20;\n    this.testStringToMath(testStr, ans)\n\n    // Test parentheses\n    testStr = \"((8))\";\n    ans = 8;\n    this.testStringToMath(testStr, ans)\n\n    //Test exponents\n    testStr = \"2^(3)\"\n    ans = 8;\n    this.testStringToMath(testStr, ans)\n    \n    //Test exponents\n    testStr = \"2^(3)+3\"\n    ans = 11;\n    this.testStringToMath(testStr, ans)\n\n    //Test exponents\n    testStr = \"3+2^(3)+3\"\n    ans = 14;\n    this.testStringToMath(testStr, ans)\n\n    //Test exponents\n    testStr = \"2^(2^2)\"\n    ans = 16;\n    this.testStringToMath(testStr, ans)\n\n    //Test exponents\n    testStr = \"2^(2^2-1)\"\n    ans = 8;\n    this.testStringToMath(testStr, ans)\n\n    //Test exponents\n    testStr = \"4^(.5)\"\n    ans = 2;\n    this.testStringToMath(testStr, ans)\n\n    //Test exponents\n    testStr = \"2^(-1)\"\n    ans = 0.5;\n    this.testStringToMath(testStr, ans)\n\n    //Test exponents\n    testStr = \"2^(2)*9\"\n    ans = 36;\n    this.testStringToMath(testStr, ans)\n\n    //Test exponents\n    testStr = \"2^(4)+2^(4)\"\n    ans = 32;\n    this.testStringToMath(testStr, ans)\n\n  }\n\n  testStringToMath = function(str, ans){\n    var calculatedAnswer = this.stringToMath(str);\n    if(calculatedAnswer != ans){\n      //Test failed!\n      console.log(\"Test failed for string = \" + str + \". Expected \" + ans + \" and got \" + calculatedAnswer + \".\")\n    }\n    else{\n      console.log(\"Test passed!\")\n    }\n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/calc/calc.ts","import { Component } from '@angular/core';\r\nimport { NavController } from 'ionic-angular';\r\nimport {ElementRef, ViewChild} from '@angular/core';\r\nimport * as MyScriptJS from 'myscript/dist/myscript.min.js';\r\nimport { splitMatchedQueriesDsl } from '@angular/core/src/view/util';\r\n\r\n@Component({\r\n  selector: 'page-my-script-canvas',\r\n  templateUrl: 'my-script-canvas.html'\r\n})\r\n\r\nexport class MyScriptCanvasPage {\r\n\r\n  @ViewChild('editor') editor: ElementRef;\r\n\r\n  constructor(public navCtrl: NavController) {\r\n\r\n  }\r\n\r\n  editorElement;\r\n\r\n  clear = function(){\r\n    this.editorElement.clear();\r\n  }\r\n\r\n  undo = function(){\r\n    this.editorElement.undo();\r\n  }\r\n\r\n  redo = function(){\r\n    this.editorElement.redo();\r\n  }\r\n\r\n  convert = function(){\r\n    this.editorElement.convert();\r\n  }\r\n      \r\n  \r\n\r\n  ngAfterViewInit() {\r\n      this.editorElement = MyScriptJS.register(this.editor.nativeElement, {\r\n      recognitionParams: {\r\n        type: 'MATH',\r\n        protocol: 'WEBSOCKET',\r\n        apiVersion: 'V4',\r\n        server: {\r\n          scheme: 'https',\r\n          host: 'webdemoapi.myscript.com',\r\n          applicationKey: '7498d8dc-55db-4f40-8a80-625de7e17bed',\r\n          hmacKey:  '2ef4521b-5697-4653-8f8f-defede0bac55',\r\n        },\r\n      },\r\n    });\r\n  }\r\n}\r\n\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/my-script-canvas/my-script-canvas.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { NgModule, ErrorHandler } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { IonicApp, IonicModule, IonicErrorHandler } from 'ionic-angular';\nimport { MyApp } from './app.component';\n\nimport { AboutPage } from '../pages/about/about';\nimport { ContactPage } from '../pages/contact/contact';\nimport { CalcPage } from '../pages/calc/calc';\nimport { TabsPage } from '../pages/tabs/tabs';\nimport { MyScriptCanvasPage } from '../pages/my-script-canvas/my-script-canvas';\n\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\n// import { CanvasPage } from '../pages/canvas/canvas';\n\n\n@NgModule({\n  declarations: [\n    MyApp,\n    AboutPage,\n    ContactPage,\n    CalcPage,\n    // CanvasPage,\n    TabsPage,\n    MyScriptCanvasPage\n  ],\n  imports: [\n    BrowserModule,\n    IonicModule.forRoot(MyApp)\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp,\n    AboutPage,\n    ContactPage,\n    // CanvasPage,\n    CalcPage,\n    TabsPage,\n    MyScriptCanvasPage\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    {provide: ErrorHandler, useClass: IonicErrorHandler}\n  ]\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\n// import { ScreenOrientation } from 'ionic-native';\n\nimport { TabsPage } from '../pages/tabs/tabs';\n\n@Component({\n  templateUrl: 'app.html'\n})\nexport class MyApp {\n  rootPage:any = TabsPage;\n\n  constructor(platform: Platform, statusBar: StatusBar, splashScreen: SplashScreen) {\n    platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      statusBar.styleDefault();\n      splashScreen.hide();\n\n      // ScreenOrientation.lockOrientation('portrait');\n\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts"],"sourceRoot":""}